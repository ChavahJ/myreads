{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateAPI\n}) => {\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n  let booksByShelf = [];\n  listOfShelves.filter(shelf => {\n    allBooks.map(book => {\n      if (booksByShelf[shelf]) {\n        booksByShelf[shelf].push(book);\n      } else {\n        booksByShelf[shelf] = book;\n      }\n    });\n  });\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    listOfShelves[oldShelf].pop(book);\n    listOfShelves[newShelf].push(book);\n    onUpdateAPI(book, newShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.map(shelf => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\",\n          children: /*#__PURE__*/_jsxDEV(Booklist, {\n            booksInList: booksByShelf[shelf],\n            onUpdateBookshelf: updateBookshelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["PropTypes","Booklist","Bookshelf","allBooks","onUpdateAPI","listOfShelves","booksByShelf","filter","shelf","map","book","push","updateBookshelf","oldShelf","newShelf","pop","title","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAE/C,QAAMC,aAAa,GAAG,CACpB;AAAC,aAAU,mBAAX;AAAgC,YAAS;AAAzC,GADoB,EAEpB;AAAC,aAAU,gBAAX;AAA6B,YAAS;AAAtC,GAFoB,EAGpB;AAAC,aAAU,cAAX;AAA2B,YAAS;AAApC,GAHoB,CAAtB;AAKA,MAAIC,YAAY,GAAG,EAAnB;AAEAD,EAAAA,aAAa,CAACE,MAAd,CAAsBC,KAAD,IAAW;AAC9BL,IAAAA,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AACrB,UAAIJ,YAAY,CAACE,KAAD,CAAhB,EAAyB;AACvBF,QAAAA,YAAY,CAACE,KAAD,CAAZ,CAAoBG,IAApB,CAAyBD,IAAzB;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACE,KAAD,CAAZ,GAAsBE,IAAtB;AACD;AACF,KAND;AAOD,GARD;;AAUA,QAAME,eAAe,GAAG,CAACF,IAAD,EAAOG,QAAP,EAAiBC,QAAjB,KAA8B;AACpDT,IAAAA,aAAa,CAACQ,QAAD,CAAb,CAAwBE,GAAxB,CAA4BL,IAA5B;AACAL,IAAAA,aAAa,CAACS,QAAD,CAAb,CAAwBH,IAAxB,CAA6BD,IAA7B;AACAN,IAAAA,WAAW,CAACM,IAAD,EAAOI,QAAP,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,cACGT,aAAa,CAACI,GAAd,CAAmBD,KAAD,IAAW;AAC5B;AAAA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCA,KAAK,CAACQ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,WAAW,EAAEV,YAAY,CAACE,KAAD,CAAnC;AAA4C,YAAA,iBAAiB,EAAEI;AAA/D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,KAPA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CArCD;;KAAMV,S;AAuCNA,SAAS,CAACe,SAAV,GAAsB;AACpBd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,KAAV,CAAgBC;AADN,CAAtB;AAIA,eAAejB,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\n\nconst Bookshelf = ({ allBooks, onUpdateAPI }) => {\n\n  const listOfShelves = [\n    {\"title\" : \"Currently Reading\", \"type\" : \"currentlyReading\"},\n    {\"title\" : \"Future Reading\", \"type\" : \"wantToRead\"},\n    {\"title\" : \"Past Reading\", \"type\" : \"read\"}\n  ]\n  let booksByShelf = [];\n\n  listOfShelves.filter((shelf) => {\n    allBooks.map((book) => {\n      if (booksByShelf[shelf]) {\n        booksByShelf[shelf].push(book);\n      } else {\n        booksByShelf[shelf] = book;\n      }\n    })\n  });\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    listOfShelves[oldShelf].pop(book);\n    listOfShelves[newShelf].push(book);\n    onUpdateAPI(book, newShelf);\n  }\n\n  return (\n    <div>\n      {listOfShelves.map((shelf) => {\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            <Booklist booksInList={booksByShelf[shelf]} onUpdateBookshelf={updateBookshelf} />\n          </div>\n        </div>\n      })}\n    </div>\n  )\n}\n\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n};\n\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}