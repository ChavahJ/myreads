{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  allBooks,\n  onUpdateShelves\n}) => {\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n\n  const updateBookShelf = (book, newShelf) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.map(shelf => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: shelf.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: allBooks.forEach(book => {\n            if (book.shelf == shelf.type) {\n              /*#__PURE__*/\n              _jsxDEV(Book, {\n                book: book,\n                onUpdateShelves: onUpdateShelves,\n                onUpdateBookShelf: updateBookShelf\n              }, book.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 21\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BookShelf;\nBookShelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired\n};\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js"],"names":["useState","useEffect","PropTypes","Book","BookShelf","allBooks","onUpdateShelves","listOfShelves","updateBookShelf","book","newShelf","map","shelf","title","forEach","type","id","propTypes","array","isRequired","shelfTitle","string","shelfKey","func"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AAEnD,QAAMC,aAAa,GAAG,CACpB;AAAC,aAAU,mBAAX;AAAgC,YAAS;AAAzC,GADoB,EAEpB;AAAC,aAAU,gBAAX;AAA6B,YAAS;AAAtC,GAFoB,EAGpB;AAAC,aAAU,cAAX;AAA2B,YAAS;AAApC,GAHoB,CAAtB;;AAKA,QAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,CAE3C,CAFD;;AAIA,sBACE;AAAA,cACGH,aAAa,CAACI,GAAd,CAAmBC,KAAD,iBACjB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCA,KAAK,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAEIR,QAAQ,CAACS,OAAT,CAAkBL,IAAD,IAAU;AACzB,gBAAIA,IAAI,CAACG,KAAL,IAAcA,KAAK,CAACG,IAAxB,EAA8B;AAC5B;AAAA,sBAAC,IAAD;AAEE,gBAAA,IAAI,EAAEN,IAFR;AAGE,gBAAA,eAAe,EAAEH,eAHnB;AAIE,gBAAA,iBAAiB,EAAEE;AAJrB,iBACOC,IAAI,CAACO,EADZ;AAAA;AAAA;AAAA;AAAA;AAMD;AACF,WATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CApCD;;KAAMZ,S;AAsCNA,SAAS,CAACa,SAAV,GAAsB;AACpBZ,EAAAA,QAAQ,EAAEH,SAAS,CAACgB,KAAV,CAAgBC,UADN;AAEpBC,EAAAA,UAAU,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFT;AAGpBG,EAAAA,QAAQ,EAAEpB,SAAS,CAACmB,MAAV,CAAiBF,UAHP;AAIpBb,EAAAA,eAAe,EAAEJ,SAAS,CAACqB,IAAV,CAAeJ;AAJZ,CAAtB;AAOA,eAAef,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\n\nconst BookShelf = ({ allBooks, onUpdateShelves }) => {\n\n  const listOfShelves = [\n    {\"title\" : \"Currently Reading\", \"type\" : \"currentlyReading\"},\n    {\"title\" : \"Future Reading\", \"type\" : \"wantToRead\"},\n    {\"title\" : \"Past Reading\", \"type\" : \"read\"}\n  ]\n  const updateBookShelf = (book, newShelf) => {\n\n  }\n\n  return (\n    <div>\n      {listOfShelves.map((shelf) => (\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {\n                allBooks.forEach((book) => {\n                  if (book.shelf == shelf.type) {\n                    <Book\n                      key={book.id}\n                      book={book}\n                      onUpdateShelves={onUpdateShelves}\n                      onUpdateBookShelf={updateBookShelf}\n                    />\n                  }\n                })\n              }\n            </ol>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nBookShelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired,\n};\n\nexport default BookShelf;"]},"metadata":{},"sourceType":"module"}