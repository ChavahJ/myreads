{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  allBooks,\n  onUpdateShelves\n}) => {\n  const listOfShelves = [{\n    t\n  }];\n\n  const updateBookShelf = (book, newShelf) => {\n    let updatedBooksOnShelf = [];\n\n    if (newShelf === shelfKey) {\n      updatedBooksOnShelf = booksOnShelf.push(book);\n    }\n\n    setBooksOnShelf(updatedBooksOnShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.map(shelf => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: shelf.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: allBooks.forEach(book => {\n            if (book.shelf === shelf.type) {\n              /*#__PURE__*/\n              _jsxDEV(Book, {\n                book: book,\n                onUpdateShelves: onUpdateShelves,\n                onUpdateBookShelf: updateBookShelf\n              }, book.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 21\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BookShelf;\nBookShelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired\n};\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js"],"names":["useState","useEffect","PropTypes","Book","BookShelf","allBooks","onUpdateShelves","listOfShelves","t","updateBookShelf","book","newShelf","updatedBooksOnShelf","shelfKey","booksOnShelf","push","setBooksOnShelf","map","shelf","title","forEach","type","id","propTypes","array","isRequired","shelfTitle","string","func"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AAEnD,QAAMC,aAAa,GAAG,CACpB;AAACC,IAAAA;AAAD,GADoB,CAAtB;;AAGA,QAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC1C,QAAIC,mBAAmB,GAAG,EAA1B;;AACA,QAAID,QAAQ,KAAKE,QAAjB,EAA2B;AACzBD,MAAAA,mBAAmB,GAAGE,YAAY,CAACC,IAAb,CAAkBL,IAAlB,CAAtB;AACD;;AACDM,IAAAA,eAAe,CAACJ,mBAAD,CAAf;AACD,GAND;;AAQA,sBACE;AAAA,cACGL,aAAa,CAACU,GAAd,CAAmBC,KAAD,iBACjB;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCA,KAAK,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAEId,QAAQ,CAACe,OAAT,CAAkBV,IAAD,IAAU;AACzB,gBAAIA,IAAI,CAACQ,KAAL,KAAeA,KAAK,CAACG,IAAzB,EAA+B;AAC7B;AAAA,sBAAC,IAAD;AAEE,gBAAA,IAAI,EAAEX,IAFR;AAGE,gBAAA,eAAe,EAAEJ,eAHnB;AAIE,gBAAA,iBAAiB,EAAEG;AAJrB,iBACOC,IAAI,CAACY,EADZ;AAAA;AAAA;AAAA;AAAA;AAMD;AACF,WATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAtCD;;KAAMlB,S;AAwCNA,SAAS,CAACmB,SAAV,GAAsB;AACpBlB,EAAAA,QAAQ,EAAEH,SAAS,CAACsB,KAAV,CAAgBC,UADN;AAEpBC,EAAAA,UAAU,EAAExB,SAAS,CAACyB,MAAV,CAAiBF,UAFT;AAGpBZ,EAAAA,QAAQ,EAAEX,SAAS,CAACyB,MAAV,CAAiBF,UAHP;AAIpBnB,EAAAA,eAAe,EAAEJ,SAAS,CAAC0B,IAAV,CAAeH;AAJZ,CAAtB;AAOA,eAAerB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\n\nconst BookShelf = ({ allBooks, onUpdateShelves }) => {\n\n  const listOfShelves = [\n    {t}\n  ]\n  const updateBookShelf = (book, newShelf) => {\n    let updatedBooksOnShelf = [];\n    if (newShelf === shelfKey) {\n      updatedBooksOnShelf = booksOnShelf.push(book);\n    }\n    setBooksOnShelf(updatedBooksOnShelf);\n  }\n\n  return (\n    <div>\n      {listOfShelves.map((shelf) => (\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {\n                allBooks.forEach((book) => {\n                  if (book.shelf === shelf.type) {\n                    <Book\n                      key={book.id}\n                      book={book}\n                      onUpdateShelves={onUpdateShelves}\n                      onUpdateBookShelf={updateBookShelf}\n                    />\n                  }\n                })\n              }\n            </ol>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nBookShelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired,\n};\n\nexport default BookShelf;"]},"metadata":{},"sourceType":"module"}