{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateShelves\n}) => {\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n  let booksByShelf = {};\n  listOfShelves.forEach(shelf => {\n    allBooks.filter(book => {\n      if (booksByShelf[shelf]) {\n        booksByShelf[shelf].push(book);\n      } else {\n        booksByShelf[shelf] = book;\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.map((shelf, index) => {\n      const booksOnShelf = allBooks.map(book => book.shelf = shelf.type);\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["useState","useEffect","PropTypes","Book","Bookshelf","allBooks","onUpdateShelves","listOfShelves","booksByShelf","forEach","shelf","filter","book","push","map","index","booksOnShelf","type","title","propTypes","array","isRequired","shelfTitle","string","shelfKey","func"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AAEnD,QAAMC,aAAa,GAAG,CACpB;AAAC,aAAU,mBAAX;AAAgC,YAAS;AAAzC,GADoB,EAEpB;AAAC,aAAU,gBAAX;AAA6B,YAAS;AAAtC,GAFoB,EAGpB;AAAC,aAAU,cAAX;AAA2B,YAAS;AAApC,GAHoB,CAAtB;AAKA,MAAIC,YAAY,GAAG,EAAnB;AAEAD,EAAAA,aAAa,CAACE,OAAd,CAAuBC,KAAD,IAAW;AAC/BL,IAAAA,QAAQ,CAACM,MAAT,CAAiBC,IAAD,IAAU;AACxB,UAAIJ,YAAY,CAACE,KAAD,CAAhB,EAAyB;AACvBF,QAAAA,YAAY,CAACE,KAAD,CAAZ,CAAoBG,IAApB,CAAyBD,IAAzB;AACD,OAFD,MAEO;AACLJ,QAAAA,YAAY,CAACE,KAAD,CAAZ,GAAsBE,IAAtB;AACD;AACF,KAND;AAOD,GARD;AAUA,sBACE;AAAA,cACGL,aAAa,CAACO,GAAd,CAAkB,CAACJ,KAAD,EAAQK,KAAR,KAAkB;AACnC,YAAMC,YAAY,GAAGX,QAAQ,CAACS,GAAT,CAAcF,IAAD,IAAUA,IAAI,CAACF,KAAL,GAAaA,KAAK,CAACO,IAA1C,CAArB;;AACA;AAAA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCP,KAAK,CAACQ;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAhCD;;KAAMd,S;AAkCNA,SAAS,CAACe,SAAV,GAAsB;AACpBd,EAAAA,QAAQ,EAAEH,SAAS,CAACkB,KAAV,CAAgBC,UADN;AAEpBC,EAAAA,UAAU,EAAEpB,SAAS,CAACqB,MAAV,CAAiBF,UAFT;AAGpBG,EAAAA,QAAQ,EAAEtB,SAAS,CAACqB,MAAV,CAAiBF,UAHP;AAIpBf,EAAAA,eAAe,EAAEJ,SAAS,CAACuB,IAAV,CAAeJ;AAJZ,CAAtB;AAOA,eAAejB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\n\nconst Bookshelf = ({ allBooks, onUpdateShelves }) => {\n\n  const listOfShelves = [\n    {\"title\" : \"Currently Reading\", \"type\" : \"currentlyReading\"},\n    {\"title\" : \"Future Reading\", \"type\" : \"wantToRead\"},\n    {\"title\" : \"Past Reading\", \"type\" : \"read\"}\n  ]\n  let booksByShelf = {};\n\n  listOfShelves.forEach((shelf) => {\n    allBooks.filter((book) => {\n      if (booksByShelf[shelf]) {\n        booksByShelf[shelf].push(book);\n      } else {\n        booksByShelf[shelf] = book;\n      }\n    })\n  });\n\n  return (\n    <div>\n      {listOfShelves.map((shelf, index) => {\n        const booksOnShelf = allBooks.map((book) => book.shelf = shelf.type);\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            \n          </div>\n        </div>\n      })}\n    </div>\n  )\n}\n\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired,\n};\n\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}