{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  allBooks,\n  shelf,\n  title,\n  onUpdateGlobalData\n}) => {\n  _s();\n\n  const [booksOnShelf, setBooksOnShelf] = useState([allBooks.filter(book => book.shelf === shelf)]);\n\n  const updateShelf = () => {\n    setBooksOnShelf(updatedBookshelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookshelf\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bookshelf-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf-books\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: currentBooksOnShelf.map(book => /*#__PURE__*/_jsxDEV(Book, {\n            book: book,\n            onUpdateGlobalData: onUpdateGlobalData,\n            onUpdateShelf: updateShelf\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookShelf, \"+1uv2criLVyqUx16YC4XNGNd3RE=\");\n\n_c = BookShelf;\nBookShelf.propTypes = {\n  booksOnShelf: PropTypes.array.isRequired,\n  title: PropTypes.string.isRequired,\n  onUpdateGlobalData: PropTypes.func.isRequired\n};\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/BookShelf.js"],"names":["useState","useEffect","PropTypes","Book","BookShelf","allBooks","shelf","title","onUpdateGlobalData","booksOnShelf","setBooksOnShelf","filter","book","updateShelf","updatedBookshelf","currentBooksOnShelf","map","id","propTypes","array","isRequired","string","func"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAAoD;AAAA;;AAClE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,CAACK,QAAQ,CAACM,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACN,KAAL,KAAeA,KAAvC,CAAD,CAAD,CAAhD;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACtBH,IAAAA,eAAe,CAACI,gBAAD,CAAf;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,gBAAiCP;AAAjC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACI;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBACKQ,mBAAmB,CACfC,GADJ,CACQJ,IAAI,iBACL,QAAC,IAAD;AAEI,YAAA,IAAI,EAAEA,IAFV;AAGI,YAAA,kBAAkB,EAAEJ,kBAHxB;AAII,YAAA,aAAa,EAAEK;AAJnB,aACSD,IAAI,CAACK,EADd;AAAA;AAAA;AAAA;AAAA,kBAFP;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA5BD;;GAAMb,S;;KAAAA,S;AA8BNA,SAAS,CAACc,SAAV,GAAsB;AAClBT,EAAAA,YAAY,EAAEP,SAAS,CAACiB,KAAV,CAAgBC,UADZ;AAElBb,EAAAA,KAAK,EAAEL,SAAS,CAACmB,MAAV,CAAiBD,UAFN;AAGlBZ,EAAAA,kBAAkB,EAAEN,SAAS,CAACoB,IAAV,CAAeF;AAHjB,CAAtB;AAMA,eAAehB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\n\nconst BookShelf = ({ allBooks, shelf, title, onUpdateGlobalData }) => {\n    const [booksOnShelf, setBooksOnShelf] = useState([allBooks.filter(book => book.shelf === shelf)]);\n    \n    const updateShelf = () => {\n        setBooksOnShelf(updatedBookshelf);\n    }\n\n\n    return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{title}</h2>\n            <div className=\"bookshelf-books\">\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {currentBooksOnShelf\n                            .map(book => \n                                <Book \n                                    key={book.id} \n                                    book={book} \n                                    onUpdateGlobalData={onUpdateGlobalData} \n                                    onUpdateShelf={updateShelf}    \n                                />)\n                        }\n                    </ol>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nBookShelf.propTypes = {\n    booksOnShelf: PropTypes.array.isRequired,\n    title: PropTypes.string.isRequired,\n    onUpdateGlobalData: PropTypes.func.isRequired,\n  };\n\nexport default BookShelf;"]},"metadata":{},"sourceType":"module"}