{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateAPI\n}) => {\n  _s();\n\n  const [currentBooks, setCurrentBooks] = useState([]);\n  const [futureBooks, setFutureBooks] = useState([]);\n  const [pastBooks, setPastBooks] = useState([]);\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n  useEffect(() => {\n    console.log(booksInList);\n  }, [booksInList]);\n  let booksByShelf = {};\n  listOfShelves.forEach(shelf => {\n    let shelfType = shelf.type;\n    let currentShelf = allBooks.filter(book => book.shelf === shelfType);\n    booksByShelf[shelfType] = currentShelf;\n  });\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    booksByShelf[oldShelf].pop(book);\n    booksByShelf[newShelf].push(book);\n    onUpdateAPI(book, newShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.forEach(shelf => {\n      let shelfType = shelf.type;\n      let currentBooksInList = booksByShelf[shelfType];\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\",\n          children: /*#__PURE__*/_jsxDEV(Booklist, {\n            booksInList: currentBooksInList,\n            onUpdateBookshelf: updateBookshelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bookshelf, \"NKXfMNuSwNSHYnzGOIju62oOH1U=\");\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["useState","useEffect","PropTypes","Booklist","Bookshelf","allBooks","onUpdateAPI","currentBooks","setCurrentBooks","futureBooks","setFutureBooks","pastBooks","setPastBooks","listOfShelves","console","log","booksInList","booksByShelf","forEach","shelf","shelfType","type","currentShelf","filter","book","updateBookshelf","oldShelf","newShelf","pop","push","currentBooksInList","title","propTypes","array","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAAA;;AAC/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMa,aAAa,GAAG,CACpB;AAAC,aAAU,mBAAX;AAAgC,YAAS;AAAzC,GADoB,EAEpB;AAAC,aAAU,gBAAX;AAA6B,YAAS;AAAtC,GAFoB,EAGpB;AAAC,aAAU,cAAX;AAA2B,YAAS;AAApC,GAHoB,CAAtB;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;AAGA,MAAIC,YAAY,GAAG,EAAnB;AAEAJ,EAAAA,aAAa,CAACK,OAAd,CAAuBC,KAAD,IAAW;AAC/B,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,QAAIC,YAAY,GAAGjB,QAAQ,CAACkB,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACL,KAAL,KAAeC,SAAzC,CAAnB;AACAH,IAAAA,YAAY,CAACG,SAAD,CAAZ,GAA0BE,YAA1B;AACD,GAJD;;AAMA,QAAMG,eAAe,GAAG,CAACD,IAAD,EAAOE,QAAP,EAAiBC,QAAjB,KAA8B;AACpDV,IAAAA,YAAY,CAACS,QAAD,CAAZ,CAAuBE,GAAvB,CAA2BJ,IAA3B;AACAP,IAAAA,YAAY,CAACU,QAAD,CAAZ,CAAuBE,IAAvB,CAA4BL,IAA5B;AACAlB,IAAAA,WAAW,CAACkB,IAAD,EAAOG,QAAP,CAAX;AACD,GAJD;;AAMA,sBACE;AAAA,cACGd,aAAa,CAACK,OAAd,CAAuBC,KAAD,IAAW;AAChC,UAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;AACA,UAAIS,kBAAkB,GAAGb,YAAY,CAACG,SAAD,CAArC;;AACA;AAAA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCD,KAAK,CAACY;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,WAAW,EAAED,kBAAvB;AAA2C,YAAA,iBAAiB,EAAEL;AAA9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1CD;;GAAMrB,S;;KAAAA,S;AA4CNA,SAAS,CAAC4B,SAAV,GAAsB;AACpB3B,EAAAA,QAAQ,EAAEH,SAAS,CAAC+B,KAAV,CAAgBC;AADN,CAAtB;AAIA,eAAe9B,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\n\nconst Bookshelf = ({ allBooks, onUpdateAPI }) => {\n  const [currentBooks, setCurrentBooks] = useState([]);\n  const [futureBooks, setFutureBooks] = useState([]);\n  const [pastBooks, setPastBooks] = useState([]);\n  \n  const listOfShelves = [\n    {\"title\" : \"Currently Reading\", \"type\" : \"currentlyReading\"},\n    {\"title\" : \"Future Reading\", \"type\" : \"wantToRead\"},\n    {\"title\" : \"Past Reading\", \"type\" : \"read\"}\n  ]\n\n  useEffect(() => {\n    console.log(booksInList);\n  }, [booksInList]);\n  let booksByShelf = {};\n\n  listOfShelves.forEach((shelf) => {\n    let shelfType = shelf.type;\n    let currentShelf = allBooks.filter((book) => book.shelf === shelfType);\n    booksByShelf[shelfType] = currentShelf;\n  });\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    booksByShelf[oldShelf].pop(book);\n    booksByShelf[newShelf].push(book);\n    onUpdateAPI(book, newShelf);\n  }\n\n  return (\n    <div>\n      {listOfShelves.forEach((shelf) => {\n        let shelfType = shelf.type;\n        let currentBooksInList = booksByShelf[shelfType];\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            <Booklist booksInList={currentBooksInList} onUpdateBookshelf={updateBookshelf} />\n          </div>\n        </div>\n      })}\n    </div>\n  )\n}\n\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n};\n\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}