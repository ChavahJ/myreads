{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateAPI\n}) => {\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n\n  const updateBookshelf = (book, newShelf) => {\n    onUpdateAPI(book, newShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allBooks && listOfShelves.map(shelf => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"bookshelf-title\",\n        children: shelf.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bookshelf-books\",\n        children: /*#__PURE__*/_jsxDEV(Booklist, {\n          booksInList: allBooks.filter(book => book.shelf === shelf.type),\n          onUpdateBookshelf: updateBookshelf\n        }, shelf.type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, shelf.type, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["PropTypes","Booklist","Bookshelf","allBooks","onUpdateAPI","listOfShelves","updateBookshelf","book","newShelf","map","shelf","title","filter","type","propTypes","array","isRequired"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAE/C,QAAMC,aAAa,GAAG,CACpB;AAAE,aAAS,mBAAX;AAAgC,YAAQ;AAAxC,GADoB,EAEpB;AAAE,aAAS,gBAAX;AAA6B,YAAQ;AAArC,GAFoB,EAGpB;AAAE,aAAS,cAAX;AAA2B,YAAQ;AAAnC,GAHoB,CAAtB;;AAMA,QAAMC,eAAe,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAC1CJ,IAAAA,WAAW,CAACG,IAAD,EAAOC,QAAP,CAAX;AACD,GAFD;;AAIA,sBACE;AAAA,cACGL,QAAQ,IAAIE,aAAa,CAACI,GAAd,CAAmBC,KAAD,iBAC3B;AAAsB,MAAA,SAAS,EAAC,WAAhC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,kBAAiCA,KAAK,CAACC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE,QAAC,QAAD;AAEE,UAAA,WAAW,EAAER,QAAQ,CAACS,MAAT,CACVL,IAAD,IAAUA,IAAI,CAACG,KAAL,KAAeA,KAAK,CAACG,IADpB,CAFf;AAKE,UAAA,iBAAiB,EAAEP;AALrB,WACOI,KAAK,CAACG,IADb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUH,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA,YADS;AADf;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BD;;KAAMX,S;AA+BNA,SAAS,CAACY,SAAV,GAAsB;AACpBX,EAAAA,QAAQ,EAAEH,SAAS,CAACe,KAAV,CAAgBC;AADN,CAAtB;AAGA,eAAed,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\n\nconst Bookshelf = ({ allBooks, onUpdateAPI }) => {\n\n  const listOfShelves = [\n    { \"title\": \"Currently Reading\", \"type\": \"currentlyReading\" },\n    { \"title\": \"Future Reading\", \"type\": \"wantToRead\" },\n    { \"title\": \"Past Reading\", \"type\": \"read\" }\n  ]\n\n  const updateBookshelf = (book, newShelf) => {\n    onUpdateAPI(book, newShelf);\n  }\n\n  return (\n    <div>\n      {allBooks && listOfShelves.map((shelf) =>\n          <div key={shelf.type} className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n            <div className=\"bookshelf-books\">\n              <Booklist\n                key={shelf.type}\n                booksInList={allBooks.filter(\n                  (book) => book.shelf === shelf.type\n                )}\n                onUpdateBookshelf={updateBookshelf}\n              />\n            </div>\n          </div>\n      )}\n    </div>\n  );\n};\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n};\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}