{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  booksOnShelf\n}) => {\n  _s();\n\n  const [query, setQuery] = useState([]);\n  const [booksInSearch, setBooksInSearch] = useState([]);\n\n  const updateQuery = query => {\n    setQuery(query);\n    searchBooks(query);\n  };\n\n  const searchBooks = query => {\n    BooksAPI.search(query, 20).then(response => {\n      if (!response.error) {\n        response.forEach(bookInSearch => {\n          booksOnShelf.forEach(bookOnShelf => {\n            if (bookOnShelf.id === bookInSearch.id) {\n              bookInSearch.shelf = bookOnShelf.shelf;\n            } else {\n              bookInSearch.shelf = \"none\";\n            }\n          });\n        });\n        setBooksInSearch(response);\n      }\n    }).catch(e => {\n      setBooksInSearch([]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: Array.isArray(displayBooks) && displayBooks.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: displayBooks.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          book: book\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBooks, \"gN0kvOCvlFuyjVVRCIhe00UHoas=\");\n\n_c = SearchBooks;\nSearchBooks.propTypes = {\n  handleOnClick: PropTypes.func.isRequired\n};\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/SearchBooks.js"],"names":["useState","Link","PropTypes","BooksAPI","Book","SearchBooks","booksOnShelf","query","setQuery","booksInSearch","setBooksInSearch","updateQuery","searchBooks","search","then","response","error","forEach","bookInSearch","bookOnShelf","id","shelf","catch","e","event","target","value","Array","isArray","displayBooks","length","map","book","propTypes","handleOnClick","func","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMW,WAAW,GAAIJ,KAAD,IAAW;AAC3BC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAK,IAAAA,WAAW,CAACL,KAAD,CAAX;AACH,GAHD;;AAKA,QAAMK,WAAW,GAAIL,KAAD,IAAW;AAC3BJ,IAAAA,QAAQ,CACHU,MADL,CACYN,KADZ,EACmB,EADnB,EAEKO,IAFL,CAEWC,QAAD,IAAc;AAChB,UAAI,CAACA,QAAQ,CAACC,KAAd,EAAqB;AACjBD,QAAAA,QAAQ,CAACE,OAAT,CAAkBC,YAAD,IAAkB;AAC/BZ,UAAAA,YAAY,CAACW,OAAb,CAAsBE,WAAD,IAAiB;AAClC,gBAAIA,WAAW,CAACC,EAAZ,KAAmBF,YAAY,CAACE,EAApC,EAAwC;AACpCF,cAAAA,YAAY,CAACG,KAAb,GAAqBF,WAAW,CAACE,KAAjC;AACH,aAFD,MAEO;AACHH,cAAAA,YAAY,CAACG,KAAb,GAAqB,MAArB;AACH;AACJ,WAND;AAOH,SARD;AAUAX,QAAAA,gBAAgB,CAACK,QAAD,CAAhB;AACH;AACJ,KAhBL,EAiBKO,KAjBL,CAiBYC,CAAD,IAAO;AACVb,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACH,KAnBL;AAoBH,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,EAAE,EAAC,GADP;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,KAAK,EAAEH,KAHX;AAII,UAAA,QAAQ,EAAGiB,KAAD,IAAWb,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACMC,KAAK,CAACC,OAAN,CAAcC,YAAd,KAA+BA,YAAY,CAACC,MAAb,GAAsB,CAAtD,iBACG;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACKD,YAAY,CAACE,GAAb,CAAkBC,IAAD,iBACd,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA;AAA1B,WAAWA,IAAI,CAACZ,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CA9DD;;GAAMf,W;;KAAAA,W;AAgENA,WAAW,CAAC4B,SAAZ,GAAwB;AACpBC,EAAAA,aAAa,EAAEhC,SAAS,CAACiC,IAAV,CAAeC;AADV,CAAxB;AAIA,eAAe/B,WAAf","sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nconst SearchBooks = ({ booksOnShelf }) => {\n    const [query, setQuery] = useState([]);\n\n    const [booksInSearch, setBooksInSearch] = useState([]);\n\n    const updateQuery = (query) => {\n        setQuery(query);\n        searchBooks(query);\n    }\n\n    const searchBooks = (query) => {\n        BooksAPI\n            .search(query, 20)\n            .then((response) => {\n                if (!response.error) {\n                    response.forEach((bookInSearch) => {\n                        booksOnShelf.forEach((bookOnShelf) => {\n                            if (bookOnShelf.id === bookInSearch.id) {\n                                bookInSearch.shelf = bookOnShelf.shelf;\n                            } else {\n                                bookInSearch.shelf = \"none\";\n                            }\n                        })\n                    });\n\n                    setBooksInSearch(response);\n                }\n            })\n            .catch((e) => {\n                setBooksInSearch([]);\n            });\n    }\n\n    return (\n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n                <Link\n                    to=\"/\"\n                    className=\"close-search\"\n                >\n                    Close\n                </Link>\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search by title, author, or ISBN\"\n                        value={query}\n                        onChange={(event) => updateQuery(event.target.value)}\n                    />\n                </div>\n            </div>\n            <div className=\"search-books-results\">\n                {(Array.isArray(displayBooks) && displayBooks.length > 0) &&\n                    <ol className=\"books-grid\">\n                        {displayBooks.map((book) => (\n                            <Book key={book.id} book={book} />\n                        ))}\n                    </ol>\n                }\n            </div>\n        </div>\n    )\n}\n\nSearchBooks.propTypes = {\n    handleOnClick: PropTypes.func.isRequired,\n};\n\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}