{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateAPI\n}) => {\n  _s();\n\n  const [currentBooks, setCurrentBooks] = useState([]);\n  const [futureBooks, setFutureBooks] = useState([]);\n  const [pastBooks, setPastBooks] = useState([]);\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n  useEffect(() => {\n    if (Array.isArray(allBooks) && allBooks.length > 0) {\n      const getAllShelves = () => {\n        const currentlyReading = allBooks.filter(book => book.shelf === \"currentlyReaindg\");\n        setCurrentBooks(currentlyReading);\n        const wantToRead = allBooks.filter(book => book.shelf === \"wantToRead\");\n        setFutureBooks(wantToRead);\n        const read = allBooks.filter(book => book.shelf === \"read\");\n        setPastBooks(read);\n      };\n\n      getAllShelves();\n    }\n  }, [allBooks]);\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    if (oldShelf === \"currentlyReading\") {\n      setCurrentBooks(currentBooks.pop(book));\n    }\n\n    if (oldShelf === \"wantToRead\") {\n      setFutureBooks(futureBooks.pop(book));\n    }\n\n    if (oldShelf === \"read\") {\n      setPastBooks(pastBooks.pop(book));\n    }\n\n    if (newShelf === \"currentlyReading\") {\n      setCurrentBooks(currentBooks.push(book));\n    }\n\n    if (newShelf === \"wantToRead\") {\n      setFutureBooks(futureBooks.push(book));\n    }\n\n    if (newShelf === \"read\") {\n      setPastBooks(pastBooks.push(book));\n    }\n\n    onUpdateAPI(book, newShelf);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [listOfShelves.map(shelf => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\",\n          children: /*#__PURE__*/_jsxDEV(Booklist, {\n            kebooksInList: currentBooks,\n            onUpdateBookshelf: updateBookshelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf-books\",\n      children: [/*#__PURE__*/_jsxDEV(Booklist, {\n        booksInList: currentBooks,\n        onUpdateBookshelf: updateBookshelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Booklist, {\n        booksInList: futureBooks,\n        onUpdateBookshelf: updateBookshelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Booklist, {\n        booksInList: pastBooks,\n        onUpdateBookshelf: updateBookshelf\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Bookshelf, \"NKXfMNuSwNSHYnzGOIju62oOH1U=\");\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["useState","useEffect","PropTypes","Booklist","Bookshelf","allBooks","onUpdateAPI","currentBooks","setCurrentBooks","futureBooks","setFutureBooks","pastBooks","setPastBooks","listOfShelves","Array","isArray","length","getAllShelves","currentlyReading","filter","book","shelf","wantToRead","read","updateBookshelf","oldShelf","newShelf","pop","push","map","title","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Booklist from \"./Booklist\";\n\nconst Bookshelf = ({ allBooks, onUpdateAPI }) => {\n  const [currentBooks, setCurrentBooks] = useState([]);\n  const [futureBooks, setFutureBooks] = useState([]);\n  const [pastBooks, setPastBooks] = useState([]);\n\n  const listOfShelves = [\n    { \"title\": \"Currently Reading\", \"type\": \"currentlyReading\" },\n    { \"title\": \"Future Reading\", \"type\": \"wantToRead\" },\n    { \"title\": \"Past Reading\", \"type\": \"read\" }\n  ]\n\n  useEffect(() => {\n    if (Array.isArray(allBooks) && allBooks.length > 0) {\n      const getAllShelves = () => {\n        const currentlyReading = allBooks.filter((book) => book.shelf === \"currentlyReaindg\");\n        setCurrentBooks(currentlyReading);\n        const wantToRead = allBooks.filter((book) => book.shelf === \"wantToRead\");\n        setFutureBooks(wantToRead);\n        const read = allBooks.filter((book) => book.shelf === \"read\");\n        setPastBooks(read);\n      }\n      getAllShelves();\n    }\n  }, [allBooks]);\n\n  const updateBookshelf = (book, oldShelf, newShelf) => {\n    if (oldShelf === \"currentlyReading\") {\n      setCurrentBooks(currentBooks.pop(book));\n    }\n    if (oldShelf === \"wantToRead\") {\n      setFutureBooks(futureBooks.pop(book));\n    }\n    if (oldShelf === \"read\") {\n      setPastBooks(pastBooks.pop(book));\n    }\n\n    if (newShelf === \"currentlyReading\") {\n      setCurrentBooks(currentBooks.push(book));\n    }\n    if (newShelf === \"wantToRead\") {\n      setFutureBooks(futureBooks.push(book));\n    }\n    if (newShelf === \"read\") {\n      setPastBooks(pastBooks.push(book));\n    }\n\n    onUpdateAPI(book, newShelf);\n  }\n\n  return (\n    <div>\n      {listOfShelves.map((shelf) => {\n        return (\n          <div class=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n            <div className=\"bookshelf-books\">\n              <Booklist kebooksInList={currentBooks} onUpdateBookshelf={updateBookshelf} />\n            </div>\n          </div>\n        )\n      })}\n\n      <div className=\"bookshelf-books\">\n        <Booklist booksInList={currentBooks} onUpdateBookshelf={updateBookshelf} />\n        <Booklist booksInList={futureBooks} onUpdateBookshelf={updateBookshelf} />\n        <Booklist booksInList={pastBooks} onUpdateBookshelf={updateBookshelf} />\n      </div>\n    </div>\n  )\n}\n\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n};\n\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}