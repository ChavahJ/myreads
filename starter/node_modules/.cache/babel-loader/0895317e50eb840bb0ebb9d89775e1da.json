{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js\";\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Bookshelf = ({\n  allBooks,\n  onUpdateShelves\n}) => {\n  const listOfShelves = [{\n    \"title\": \"Currently Reading\",\n    \"type\": \"currentlyReading\"\n  }, {\n    \"title\": \"Future Reading\",\n    \"type\": \"wantToRead\"\n  }, {\n    \"title\": \"Past Reading\",\n    \"type\": \"read\"\n  }];\n  let booksByShelf = {};\n  listOfShelves.forEach(shelf => {\n    allBooks.filter(book => {\n      if (booksByShelf[book.id]) {\n        booksByShelf.push(b);\n      }\n    });\n\n    if (usersByMovie[movieID]) {\n      usersByMovie[movieID].push(profile.userID);\n    } else {\n      usersByMovie[movieID] = [profile.userID];\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listOfShelves.map((shelf, index) => {\n      const booksOnShelf = allBooks.map(book => book.shelf = shelf.type);\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        className: \"bookshelf\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"bookshelf-title\",\n          children: shelf.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-books\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Bookshelf;\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired\n};\nexport default Bookshelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookshelf\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/Bookshelf.js"],"names":["useState","useEffect","PropTypes","Book","Bookshelf","allBooks","onUpdateShelves","listOfShelves","booksByShelf","forEach","shelf","filter","book","id","push","b","usersByMovie","movieID","profile","userID","map","index","booksOnShelf","type","title","propTypes","array","isRequired","shelfTitle","string","shelfKey","func"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AAEnD,QAAMC,aAAa,GAAG,CACpB;AAAC,aAAU,mBAAX;AAAgC,YAAS;AAAzC,GADoB,EAEpB;AAAC,aAAU,gBAAX;AAA6B,YAAS;AAAtC,GAFoB,EAGpB;AAAC,aAAU,cAAX;AAA2B,YAAS;AAApC,GAHoB,CAAtB;AAKA,MAAIC,YAAY,GAAG,EAAnB;AAEAD,EAAAA,aAAa,CAACE,OAAd,CAAuBC,KAAD,IAAW;AAC/BL,IAAAA,QAAQ,CAACM,MAAT,CAAiBC,IAAD,IAAU;AACxB,UAAIJ,YAAY,CAACI,IAAI,CAACC,EAAN,CAAhB,EAA2B;AACzBL,QAAAA,YAAY,CAACM,IAAb,CAAkBC,CAAlB;AACD;AACF,KAJD;;AAKA,QAAIC,YAAY,CAACC,OAAD,CAAhB,EAA2B;AACzBD,MAAAA,YAAY,CAACC,OAAD,CAAZ,CAAsBH,IAAtB,CAA2BI,OAAO,CAACC,MAAnC;AACD,KAFD,MAEO;AACLH,MAAAA,YAAY,CAACC,OAAD,CAAZ,GAAwB,CAACC,OAAO,CAACC,MAAT,CAAxB;AACD;AACF,GAXD;AAaA,sBACE;AAAA,cACGZ,aAAa,CAACa,GAAd,CAAkB,CAACV,KAAD,EAAQW,KAAR,KAAkB;AACnC,YAAMC,YAAY,GAAGjB,QAAQ,CAACe,GAAT,CAAcR,IAAD,IAAUA,IAAI,CAACF,KAAL,GAAaA,KAAK,CAACa,IAA1C,CAArB;;AACA;AAAA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,iBAAd;AAAA,oBAAiCb,KAAK,CAACc;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,KARA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;;KAAMpB,S;AAqCNA,SAAS,CAACqB,SAAV,GAAsB;AACpBpB,EAAAA,QAAQ,EAAEH,SAAS,CAACwB,KAAV,CAAgBC,UADN;AAEpBC,EAAAA,UAAU,EAAE1B,SAAS,CAAC2B,MAAV,CAAiBF,UAFT;AAGpBG,EAAAA,QAAQ,EAAE5B,SAAS,CAAC2B,MAAV,CAAiBF,UAHP;AAIpBrB,EAAAA,eAAe,EAAEJ,SAAS,CAAC6B,IAAV,CAAeJ;AAJZ,CAAtB;AAOA,eAAevB,SAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Book from \"./Book\";\n\nconst Bookshelf = ({ allBooks, onUpdateShelves }) => {\n\n  const listOfShelves = [\n    {\"title\" : \"Currently Reading\", \"type\" : \"currentlyReading\"},\n    {\"title\" : \"Future Reading\", \"type\" : \"wantToRead\"},\n    {\"title\" : \"Past Reading\", \"type\" : \"read\"}\n  ]\n  let booksByShelf = {};\n\n  listOfShelves.forEach((shelf) => {\n    allBooks.filter((book) => {\n      if (booksByShelf[book.id]) {\n        booksByShelf.push(b)\n      }\n    })\n    if (usersByMovie[movieID]) {\n      usersByMovie[movieID].push(profile.userID);\n    } else {\n      usersByMovie[movieID] = [profile.userID];\n    }\n  });\n\n  return (\n    <div>\n      {listOfShelves.map((shelf, index) => {\n        const booksOnShelf = allBooks.map((book) => book.shelf = shelf.type);\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\n          <div className=\"bookshelf-books\">\n            \n          </div>\n        </div>\n      })}\n    </div>\n  )\n}\n\nBookshelf.propTypes = {\n  allBooks: PropTypes.array.isRequired,\n  shelfTitle: PropTypes.string.isRequired,\n  shelfKey: PropTypes.string.isRequired,\n  onUpdateShelves: PropTypes.func.isRequired,\n};\n\nexport default Bookshelf;"]},"metadata":{},"sourceType":"module"}