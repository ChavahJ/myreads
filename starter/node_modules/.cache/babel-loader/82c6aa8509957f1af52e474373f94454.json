{"ast":null,"code":"var _jsxFileName = \"/home/workspace/nd0191-c1-myreads/starter/src/SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBooks = ({\n  booksOnShelf,\n  handleOnClick\n}) => {\n  _s();\n\n  const [query, setQuery] = useState([]);\n  const [displayBooks, setDisplayBooks] = useState([]);\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n    BooksAPI.search(query, 20).then(books => {\n      if (!books.error) {\n        books.forEach(book => {\n          booksOnShelf.forEach(x => {\n            if (x.id === book.id) {\n              book.shelf = x.shelf;\n            }\n          });\n        });\n        setDisplayBooks(books);\n      } else {\n        setDisplayBooks([]);\n      }\n    }).catch(e => {\n      setDisplayBooks([]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"close-search\",\n        onClick: handleOnClick,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          value: query,\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: Array.isArray(displayBooks) && displayBooks.length > 0 && /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: displayBooks.map(book => /*#__PURE__*/_jsxDEV(Book, {\n          book: book\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBooks, \"3JHOuJVIzliacrzDpjes39GEDxk=\");\n\n_c = SearchBooks;\nSearchBooks.propTypes = {\n  handleOnClick: PropTypes.func.isRequired\n};\nexport default SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["/home/workspace/nd0191-c1-myreads/starter/src/SearchBooks.js"],"names":["useState","useEffect","PropTypes","BooksAPI","Book","SearchBooks","booksOnShelf","handleOnClick","query","setQuery","displayBooks","setDisplayBooks","updateQuery","trim","search","then","books","error","forEach","book","x","id","shelf","catch","e","event","target","value","Array","isArray","length","map","propTypes","func","isRequired"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAD,KAAqC;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMY,WAAW,GAAIJ,KAAD,IAAW;AAC3BC,IAAAA,QAAQ,CAACD,KAAK,CAACK,IAAN,EAAD,CAAR;AACAV,IAAAA,QAAQ,CACHW,MADL,CACYN,KADZ,EACmB,EADnB,EAEKO,IAFL,CAEWC,KAAD,IAAW;AACb,UAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChBD,QAAAA,KAAK,CAACE,OAAN,CAAeC,IAAD,IAAU;AACtBb,UAAAA,YAAY,CAACY,OAAb,CAAsBE,CAAD,IAAO;AAC1B,gBAAIA,CAAC,CAACC,EAAF,KAASF,IAAI,CAACE,EAAlB,EAAsB;AACpBF,cAAAA,IAAI,CAACG,KAAL,GAAaF,CAAC,CAACE,KAAf;AACD;AACF,WAJD;AAKD,SAND;AAOAX,QAAAA,eAAe,CAACK,KAAD,CAAf;AACD,OATD,MASO;AACHL,QAAAA,eAAe,CAAC,EAAD,CAAf;AACH;AACF,KAfP,EAgBOY,KAhBP,CAgBcC,CAAD,IAAO;AACZb,MAAAA,eAAe,CAAC,EAAD,CAAf;AACD,KAlBP;AAmBH,GArBD;;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,OAAO,EAAEJ,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,KAAK,EAAEC,KAHX;AAII,UAAA,QAAQ,EAAGiB,KAAD,IAAWb,WAAW,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBACMC,KAAK,CAACC,OAAN,CAAcnB,YAAd,KAA+BA,YAAY,CAACoB,MAAb,GAAsB,CAAtD,iBACG;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACKpB,YAAY,CAACqB,GAAb,CAAkBZ,IAAD,iBACd,QAAC,IAAD;AAAoB,UAAA,IAAI,EAAEA;AAA1B,WAAWA,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH,CAzDD;;GAAMhB,W;;KAAAA,W;AA2DNA,WAAW,CAAC2B,SAAZ,GAAwB;AACpBzB,EAAAA,aAAa,EAAEL,SAAS,CAAC+B,IAAV,CAAeC;AADV,CAAxB;AAIA,eAAe7B,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport Book from \"./Book\";\n\nconst SearchBooks = ({ booksOnShelf, handleOnClick }) => {\n    const [query, setQuery] = useState([]);\n\n    const [displayBooks, setDisplayBooks] = useState([]);\n\n    const updateQuery = (query) => {\n        setQuery(query.trim());\n        BooksAPI\n            .search(query, 20)\n            .then((books) => {\n                if (!books.error) {\n                  books.forEach((book) => {\n                    booksOnShelf.forEach((x) => {\n                      if (x.id === book.id) {\n                        book.shelf = x.shelf;\n                      }\n                    });\n                  });\n                  setDisplayBooks(books);\n                } else {\n                    setDisplayBooks([]);\n                }\n              })\n              .catch((e) => {\n                setDisplayBooks([]);\n              });\n    };\n\n    return (\n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n                <a\n                    className=\"close-search\"\n                    onClick={handleOnClick}\n                >\n                    Close\n                </a>\n                <div className=\"search-books-input-wrapper\">\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search by title, author, or ISBN\"\n                        value={query}\n                        onChange={(event) => updateQuery(event.target.value)}\n                    />\n                </div>\n            </div>\n            <div className=\"search-books-results\">\n                {(Array.isArray(displayBooks) && displayBooks.length > 0) &&\n                    <ol className=\"books-grid\">\n                        {displayBooks.map((book) => (\n                            <Book key={book.id} book={book} />\n                        ))}\n                    </ol>\n                }\n            </div>\n        </div>\n    )\n}\n\nSearchBooks.propTypes = {\n    handleOnClick: PropTypes.func.isRequired,\n};\n\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}